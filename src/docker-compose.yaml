services:
  database:
    image: postgres
    container_name: eventstore.blazor.database
    environment:
      - POSTGRES_DB=EventStore
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432

  blazor:
    image: eventstore.blazor
    container_name: eventstore.blazor.app
    depends_on:
      - database
    build:
      context: .
      dockerfile: EventStore.Blazor.EFCore.Postgres/Dockerfile
    environment:
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__Postgres: Server=database;Port=5432;Database=EventStore;User ID=postgres;Password=password;
      OTEL_DOTNET_AUTO_HOME: /otel-dotnet-auto
      OTEL_SERVICE_NAME: "EventStore.BlazorApp"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318"
    ports:
      - 5256:80

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
      - ./log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      JAEGER_ENDPOINT: "jaeger:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
    ports:
      - "8889:8889"   # Prometheus metrics exporter (scrape endpoint)
      - "13133:13133" # health_check extension
      - "55679:55679" # ZPages extension
    depends_on:
      - jaeger
      - prometheus
      - loki

  jaeger:
    image: jaegertracing/all-in-one:1.50.0
    ports:
      - "16686:16686" # Jaeger Web UI

  prometheus:
    image: prom/prometheus:v2.42.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:2.7.4
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    ports:
      - "3000:3000"
