@using EventStore.Projections
@using EventStore.SampleApp.Domain
@using EventStore.SampleApp.Domain.TrafficLights.Projections
@using MudBlazor
@inherits EventStore.Blazor.EFCore.Postgres.Components.BaseControls.PollingComponentBase
@inject IProjectionRepository<TrafficLightProjection> Repository

<MudStack Row="true" AlignItems="AlignItems.Center">
    <MudText Align="Align.Center" Typo="Typo.h5">Traffic Light is:</MudText>
    <MudIcon Icon="@Icons.Material.Filled.Circle" Color="@TrafficLightColour"/>
</MudStack>

@code {
    Color TrafficLightColour { get; set; }

    protected override async Task StartPollingAsync(CancellationToken token)
    {
        while (!token.IsCancellationRequested)
        {
            await InvokeAsync(async () =>
            {
                var projection = await Repository.LoadAsync(nameof(TrafficLightProjection), token);
                var currentColor = GetColor(projection.Colour);

                if (currentColor != TrafficLightColour)
                {
                    TrafficLightColour = currentColor;
                    StateHasChanged();
                }
            });

            await Task.Delay(500, token);
        }
    }

    Color GetColor(Colour properSpelling)
    {
        return properSpelling switch
        {
            Colour.Red => Color.Error,
            Colour.Green => Color.Success,
            Colour.Yellow => Color.Warning,
            _ => Color.Dark
        };
    }

}