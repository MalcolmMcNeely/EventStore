@using EventStore.EFCore.Postgres.Events
@inject IJSRuntime JS

<div>
    <MudStack>
        <h3>@Stream stream</h3>

        <MudTable id="@_containerId"
                  Items="@Events.Where(x => x.Key.Equals(Stream))"
                  Dense="true"
                  FixedHeader="true">
            <HeaderContent>
                <MudTh>RowKey</MudTh>
                <MudTh>Time</MudTh>
                <MudTh>EventType</MudTh>
                <MudTh>Content</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="RowKey">@context.RowKey</MudTd>
                <MudTd DataLabel="Time">@context.TimeStamp</MudTd>
                <MudTd DataLabel="EventType">@context.EventType</MudTd>
                <MudTd DataLabel="Content">@context.Envelope.Body</MudTd>
            </RowTemplate>
        </MudTable>
        <MudDivider/>
        <MudStack Row="true" StretchItems="StretchItems.All">
            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.ArrowDownward"
                       OnClick="ScrollToBottomAsync">
                Scroll to bottom
            </MudButton>
            <MudButton Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.ArrowUpward" OnClick="ScrollToTopAsync">
                Scroll to top
            </MudButton>
        </MudStack>
    </MudStack>
</div>

<script>
    window.scrollToBottom = (elementId) => {
        let elem = document.getElementById(elementId);
        if (elem) {
            elem.scrollTop = elem.scrollHeight;
        }
    };

    window.scrollToTop = (elementId) => {
        let elem = document.getElementById(elementId);
        if (elem) {
            elem.scrollTop = 0;
        }
    };
</script>

@code {
    [Parameter] public required string Stream { get; set; }
    [CascadingParameter(Name = "CEvents")] public List<EventStreamEntity> Events { get; set; } = new();

    readonly string _containerId = $"eventStoreTable{Guid.NewGuid():N}";

    public async Task ScrollToBottomAsync()
    {
        await JS.InvokeVoidAsync("scrollToBottom", _containerId);
    }

    public async Task ScrollToTopAsync()
    {
        await JS.InvokeVoidAsync("scrollToTop", _containerId);
    }

}